import pygame
import random

pygame.init()

screen_width = 1000
screen_height = 700

screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("Pygame basics")

running = True


background_color = pygame.Color("black")

line_color = pygame.Color('black')
fill_color = pygame.Color('red')

black = (0,0,0)
white = (255,255,255)

play_button = pygame.Rect(350,180,200,50)
exit_button = pygame.Rect(350,350, 200,50)

def bouncing_ball_with_paddle():

    paddle_w, paddle_h = 200, 15
    paddle = pygame.Rect(400, 665, paddle_w, paddle_h)
    paddle_speed = 10

    ball_radius = 15
    ball_speed = 4
    ball = pygame.Rect(200, 250, ball_radius, ball_radius)
    ball_x = random.choice([-1, 3])
    ball_y = ball_speed

    score = 0

    font = pygame.font.Font(pygame.font.match_font('times new roman', bold=True, ), size=30)
    font1 = pygame.font.Font(pygame.font.match_font('times new roman', bold=True, ), size=30)

    screen = pygame.display.set_mode((screen_width, screen_height))

    pygame.display.set_caption("Pygame Basics")

    background_color = 'black'

    running = True

    while running:

        pygame.time.delay(10)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        ball.x += ball_x
        ball.y += ball_y

        keys = pygame.key.get_pressed()

        if keys[pygame.K_LEFT] and paddle.left > 0:
            paddle.x -= paddle_speed

        if keys[pygame.K_RIGHT] and paddle.right < screen_width:
            paddle.x += paddle_speed

        if ball.colliderect(paddle):
            ball_y = -  ball_y
            score += 1

        screen.fill(background_color)

        score_text = font.render(f"Score={score}", True, 'White')
        screen.blit(score_text, (850, 30))

        score_text1 = font.render(f"bounce the ball with the paddle", True, 'white')
        screen.blit(score_text1, (300, 30))

        # pygame.draw.circle(screen,'white',(200,200),ball_radius)

        pygame.draw.rect(screen, 'white', paddle)

        pygame.draw.ellipse(screen, 'white', ball)

        if ball.y <= 0:
            ball_y = -ball_y
            ball_x = random.choice([-5, 5])

        if ball.left <= 0 or ball.right >= screen_width:
            ball_y = -ball_y
            ball_x = random.choice([-5, 5])

        if ball.y >= screen_height:
            ball.x = screen_width // 2
            ball.y = screen_height // 2
            ball_x = random.choice([-5, 5])

        pygame.display.flip()

    return

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.MOUSEBUTTONDOWN:
            if exit_button.collidepoint(event.pos):
                running = False
            if play_button.collidepoint(event.pos):

                bouncing_ball_with_paddle()

    screen.fill(background_color)

    pygame.draw.rect(screen,'green' , play_button, border_radius = 10)
    pygame.draw.rect(screen, 'Red', exit_button, border_radius = 10)

    font = pygame.font.Font(None, 36)

    play_text =font.render("Play", True, 'White')
    exit_text = font.render("Exit", True, 'White')

    screen.blit(play_text,(play_button.x + 75, play_button.y + 10))
    screen.blit(exit_text,(exit_button.x + 75,exit_button.y + 10))

    pygame.display.flip()
